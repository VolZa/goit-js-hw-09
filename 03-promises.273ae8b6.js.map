{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAc,CAClBC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,wBACtCI,SAAUL,SAASC,cAAc,0BAGnC,SAASK,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAMbV,EAAYO,SAASU,iBAAiB,SAAUC,IAC9CA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOrB,EAAYI,aAAakB,OACxCC,EAAOF,OAAOrB,EAAYK,YAAYiB,OACtCE,EAASH,OAAOrB,EAAYM,cAAcgB,OAEhD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGL,EAAQG,EAAOE,GAC7BC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBJ,QAAUf,MAAU,IAElEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBN,QAAQf,MAAU,IAGpEV,EAAYC,OAAO+B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsPromise = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('input[name=\"amount\"]'),\n  buttonEl: document.querySelector('button[type=\"submit\"]'),\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nrefsPromise.buttonEl.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const delay = Number(refsPromise.inputDelayEl.value);\n  const step = Number(refsPromise.inputStepEl.value);\n  const amount = Number(refsPromise.inputAmountEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });  \n  }\n  refsPromise.formEl.reset();\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refsPromise","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","buttonEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.273ae8b6.js.map"}