{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAc,CAClBC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,wBACtCI,SAAUL,SAASC,cAAc,0BAoBnCH,EAAYO,SAASC,iBAAiB,SAAS,SAACC,G,kBAjBhD,IAAuBC,EAAUC,GAAVD,EAyBLE,EAzBeD,EAyBZE,EAAQC,GAAQF,EAAE,GAxBrB,IAAIG,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAeAU,MAAK,SAAAC,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MACjBY,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAiCC,OAARd,EAAE,QAAYc,OAANf,EAAM,M,IAEhEgB,OAAM,SAAAL,GAAWA,EAARZ,S,IAAUC,EAAKW,EAALX,MAClBY,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAA8BF,OAARd,EAAE,QAAYc,OAANf,EAAM,M,KAZlEF,EAAEoB,iBAMF,IAJA,IAAMhB,EAAQiB,OAAO9B,EAAYI,aAAa2B,OACxCjB,EAAOgB,OAAO9B,EAAYK,YAAY0B,OACtCC,EAASF,OAAO9B,EAAYM,cAAcyB,OAEvCE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAACC,EAAAD,GASnCjC,EAAYC,OAAOkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refsPromise = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('input[name=\"amount\"]'),\n  buttonEl: document.querySelector('button[type=\"submit\"]'),\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nrefsPromise.buttonEl.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const delay = Number(refsPromise.inputDelayEl.value);\n  const step = Number(refsPromise.inputStepEl.value);\n  const amount = Number(refsPromise.inputAmountEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + step * (i-1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });  \n  }\n  refsPromise.formEl.reset();\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refsPromise","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","buttonEl","addEventListener","e","position","delay","i","delay1","step","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","Number","value","amount","i1","_loop","reset"],"version":3,"file":"03-promises.9ed458ba.js.map"}